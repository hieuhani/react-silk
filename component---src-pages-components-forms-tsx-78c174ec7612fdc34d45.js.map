{"version":3,"sources":["webpack:///../react-silk-form/dist/react-silk-form.es.js","webpack:///./src/pages/components/forms.tsx"],"names":["Form","props","_this","_React$PureComponent","call","this","initialFormValues","fields","forEach","field","initialValues","name","state","values","onSubmit","bind","assertThisInitialized_default","fieldChanged","value","setState","prevState","_Object$assign","Object","assign","render","_this2","React","createElement","View","map","type","inputProps","__rest","secureTextEntry","InputPin","key","fieldStyles","onChanged","label","Choices","choices","mutiple","Input","Button","onPress","submitButton","PureComponent","memo","_useState","useState","formValues","setFormValues","react_default","a","components","react_silk_form_es_Form","JSON","stringify"],"mappings":"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","file":"component---src-pages-components-forms-tsx-78c174ec7612fdc34d45.js","sourcesContent":["import { __rest } from 'tslib';\nimport React from 'react';\nimport { View } from 'react-native';\nimport { InputPin, Choices, Input, Button } from 'react-silk-ui';\n\nclass Form extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        const initialFormValues = {};\r\n        props.fields.forEach(field => {\r\n            if (props.initialValues) {\r\n                initialFormValues[field.name] = props.initialValues[field.name];\r\n            }\r\n            else {\r\n                initialFormValues[field.name] = '';\r\n            }\r\n        });\r\n        this.state = {\r\n            values: initialFormValues,\r\n        };\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    fieldChanged(name, value) {\r\n        this.setState(prevState => ({\r\n            values: Object.assign({}, prevState.values, { [name]: value }),\r\n        }));\r\n    }\r\n    onSubmit() {\r\n        this.props.onSubmit(this.state.values);\r\n    }\r\n    render() {\r\n        return (React.createElement(View, null,\r\n            this.props.fields.map(field => {\r\n                const { type } = field, inputProps = __rest(field, [\"type\"]);\r\n                switch (type) {\r\n                    case 'password':\r\n                        inputProps.secureTextEntry = true;\r\n                        break;\r\n                    case 'pin':\r\n                        return (React.createElement(InputPin, { key: field.name, fieldStyles: this.props.fieldStyles, onChanged: (value) => this.fieldChanged(field.name, value), label: field.label }));\r\n                    case 'radio':\r\n                        return (React.createElement(Choices, { key: field.name, label: field.label, choices: field.choices, value: this.state.values[field.name], onChanged: (value) => this.fieldChanged(field.name, value) }));\r\n                    case 'checkbox':\r\n                        return (React.createElement(Choices, { key: field.name, label: field.label, mutiple: true, choices: field.choices, value: this.state.values[field.name], onChanged: (value) => this.fieldChanged(field.name, value) }));\r\n                    default:\r\n                        break;\r\n                }\r\n                return (React.createElement(Input, Object.assign({ key: field.name }, this.props.fieldStyles, inputProps, { value: this.state.values[field.name], onChanged: (value) => this.fieldChanged(field.name, value) })));\r\n            }),\r\n            this.props.onSubmit && (React.createElement(Button, Object.assign({ onPress: this.onSubmit }, this.props.submitButton), \"Submit\"))));\r\n    }\r\n}\r\nvar index = { Form };\n\nexport default index;\nexport { Form };\n","import React, { useState } from 'react'\nimport { Form } from 'react-silk-form'\nimport MyMom from '.'\n\nexport default React.memo(() => {\n  const [formValues, setFormValues] = useState({})\n  return (\n    <MyMom>\n      <Form\n        fields={[\n          {\n            name: 'email',\n            label: 'Enter your email',\n          },\n          {\n            name: 'password',\n            label: 'Password',\n            type: 'password',\n          },\n          {\n            name: 'code',\n            label: 'Pin code',\n            type: 'pin',\n          },\n          {\n            name: 'gender',\n            label: 'Gender',\n            type: 'radio',\n            choices: [\n              {\n                key: 'male',\n                value: 'Male',\n              },\n              {\n                key: 'female',\n                value: 'Female',\n              },\n            ],\n          },\n          {\n            name: 'model',\n            label: 'Model',\n            type: 'checkbox',\n            choices: [\n              {\n                key: 'apple',\n                value: 'Apple',\n              },\n              {\n                key: 'dell',\n                value: 'Dell',\n              },\n              {\n                key: 'asus',\n                value: 'ASUS',\n              },\n              {\n                key: 'acer',\n                value: 'Acer',\n              },\n            ],\n          },\n        ]}\n        onSubmit={setFormValues}\n      />\n      <code>{JSON.stringify(formValues)}</code>\n    </MyMom>\n  )\n})\n"],"sourceRoot":""}